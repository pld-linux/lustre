--- lustre-release-cac870c/lustre/utils/libmount_utils_zfs.c.orig	2023-12-23 04:15:24.000000000 +0100
+++ lustre-release-cac870c/lustre/utils/libmount_utils_zfs.c	2024-05-20 21:19:50.733389631 +0200
@@ -62,17 +62,17 @@ struct zfs_ldd_prop_bridge {
 	int   zlpb_ldd_offset;
 	/* Function pointer responsible for reading in the @prop
 	 * property from @zhp and storing it in @ldd_field */
-	int (*zlpb_get_prop_fn)(zfs_handle_t *zhp, char *prop, void *ldd_field);
+	int (*zlpb_get_prop_fn)(zfs_handle_t *zhp, const char *prop, void *ldd_field);
 	/* Function pointer responsible for writing the value of @ldd_field
 	 * into the @prop dataset property in @zhp */
-	int (*zlpb_set_prop_fn)(zfs_handle_t *zhp, char *prop, void *ldd_field);
+	int (*zlpb_set_prop_fn)(zfs_handle_t *zhp, const char *prop, void *ldd_field);
 };
 
 /* Forward declarations needed to initialize the ldd prop bridge list */
-static int zfs_get_prop_int(zfs_handle_t *, char *, void *);
-static int zfs_set_prop_int(zfs_handle_t *, char *, void *);
-static int zfs_get_prop_str(zfs_handle_t *, char *, void *);
-static int zfs_set_prop_str(zfs_handle_t *, char *, void *);
+static int zfs_get_prop_int(zfs_handle_t *, const char *, void *);
+static int zfs_set_prop_int(zfs_handle_t *, const char *, void *);
+static int zfs_get_prop_str(zfs_handle_t *, const char *, void *);
+static int zfs_set_prop_str(zfs_handle_t *, const char *, void *);
 
 /* Helper for initializing the entries in the special_ldd_prop_params list.
  *    - @name: stored directly in the zlpb_prop_name field
@@ -113,7 +113,7 @@ static libzfs_handle_t *g_zfs;
 
 void zfs_fini(void);
 
-static int zfs_set_prop_int(zfs_handle_t *zhp, char *prop, void *val)
+static int zfs_set_prop_int(zfs_handle_t *zhp, const char *prop, void *val)
 {
 	char str[64];
 	int ret;
@@ -129,7 +129,7 @@ static int zfs_set_prop_int(zfs_handle_t
  * Write the zfs property string, note that properties with a NULL or
  * zero-length value will not be written and 0 returned.
  */
-static int zfs_set_prop_str(zfs_handle_t *zhp, char *prop, void *val)
+static int zfs_set_prop_str(zfs_handle_t *zhp, const char *prop, void *val)
 {
 	int ret = 0;
 
@@ -173,7 +173,7 @@ static int zfs_erase_prop(zfs_handle_t *
 	return zfs_remove_prop(zhp, nvl, propname);
 }
 
-static int zfs_is_special_ldd_prop_param(char *name)
+static int zfs_is_special_ldd_prop_param(const char *name)
 {
 	int i;
 
@@ -478,10 +478,10 @@ int zfs_erase_ldd(struct mkfs_opts *mop,
 	return add_param(mop->mo_ldd.ldd_params, key, "");
 }
 
-static int zfs_get_prop_int(zfs_handle_t *zhp, char *prop, void *val)
+static int zfs_get_prop_int(zfs_handle_t *zhp, const char *prop, void *val)
 {
 	nvlist_t *propval;
-	char *propstr;
+	const char *propstr;
 	int ret;
 
 	ret = nvlist_lookup_nvlist(zfs_get_user_props(zhp), prop, &propval);
@@ -500,10 +500,10 @@ static int zfs_get_prop_int(zfs_handle_t
 	return ret;
 }
 
-static int zfs_get_prop_str(zfs_handle_t *zhp, char *prop, void *val)
+static int zfs_get_prop_str(zfs_handle_t *zhp, const char *prop, void *val)
 {
 	nvlist_t *propval;
-	char *propstr;
+	const char *propstr;
 	int ret;
 
 	ret = nvlist_lookup_nvlist(zfs_get_user_props(zhp), prop, &propval);
